{"ast":null,"code":"var _jsxFileName = \"/Users/surajs/Coding/React/webapi/src/components/electronics/ElecAdd.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Nav from '../nav/Nav';\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport \"./electronics.css\";\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ElecAdd() {\n  _s();\n  const idRef = useRef();\n  const imgRef = useRef();\n  const brandRef = useRef();\n  const ratingRef = useRef();\n  const descriptionRef = useRef();\n  const [file, setFile] = useState();\n  const [img, setImg] = useState();\n  const navigate = useNavigate();\n  const btnHanlder = () => {\n    const storage = getStorage();\n\n    /** @type {any} */\n    const metadata = {\n      contentType: 'image/jpeg'\n    };\n\n    // Upload file and metadata to the object 'images/mountains.jpg'\n    const storageRef = ref(storage, 'images/' + file.name);\n    const uploadTask = uploadBytesResumable(storageRef, file, metadata);\n\n    // Listen for state changes, errors, and completion of the upload.\n    uploadTask.on('state_changed', snapshot => {\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      console.log('Upload is ' + progress + '% done');\n      switch (snapshot.state) {\n        case 'paused':\n          console.log('Upload is paused');\n          break;\n        case 'running':\n          console.log('Upload is running');\n          break;\n      }\n    }, error => {\n      // A full list of error codes is available at\n      // https://firebase.google.com/docs/storage/web/handle-errors\n      switch (error.code) {\n        case 'storage/unauthorized':\n          // User doesn't have permission to access the object\n          break;\n        case 'storage/canceled':\n          // User canceled the upload\n          break;\n\n        // ...\n\n        case 'storage/unknown':\n          // Unknown error occurred, inspect error.serverResponse\n          break;\n      }\n    }, () => {\n      // Upload completed successfully, now we can get the download URL\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        setImg(downloadURL);\n        console.log('File available at', downloadURL);\n      });\n    });\n  };\n  const formHandler = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:8080/electronics\", {\n      id: idRef.current.value,\n      name: descriptionRef.current.value,\n      brand: brandRef.current.value,\n      rating: ratingRef.current.value,\n      img: img\n    }).then(res => {\n      console.log(res.data);\n      if (res.data == \"added\") {\n        navigate(\"/\");\n      }\n    }).then(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: idRef,\n          placeholder: \"id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: descriptionRef,\n          placeholder: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: brandRef,\n          placeholder: \"brand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: ratingRef,\n          placeholder: \"rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: btnHanlder,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(ElecAdd, \"+NMV/hgwMGHWsB9gWHcUqEjg4XE=\", false, function () {\n  return [useNavigate];\n});\n_c = ElecAdd;\nvar _c;\n$RefreshReg$(_c, \"ElecAdd\");","map":{"version":3,"names":["axios","React","useEffect","useRef","useState","Nav","getStorage","ref","uploadBytesResumable","getDownloadURL","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ElecAdd","_s","idRef","imgRef","brandRef","ratingRef","descriptionRef","file","setFile","img","setImg","navigate","btnHanlder","storage","metadata","contentType","storageRef","name","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","console","log","state","error","code","then","downloadURL","formHandler","e","preventDefault","post","id","current","value","brand","rating","res","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","placeholder","onChange","target","files","onClick","_c","$RefreshReg$"],"sources":["/Users/surajs/Coding/React/webapi/src/components/electronics/ElecAdd.js"],"sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useRef, useState } from 'react'\nimport Nav from '../nav/Nav';\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\n\n\nimport \"./electronics.css\"\nimport { useNavigate } from 'react-router';\n\nexport default function ElecAdd() {\n\n\n    const idRef=useRef();\n    const imgRef=useRef();\n    const brandRef=useRef();\n  \n    const ratingRef=useRef();\n\n    const descriptionRef=useRef()\n\n \n\n    const[file,setFile]=useState();\n    const[img,setImg]=useState();\n\n\n    const navigate=useNavigate();\n    const btnHanlder=()=>{\n      const storage = getStorage();\n\n \n/** @type {any} */\nconst metadata = {\n  contentType: 'image/jpeg'\n};\n\n// Upload file and metadata to the object 'images/mountains.jpg'\nconst storageRef = ref(storage, 'images/' + file.name);\nconst uploadTask = uploadBytesResumable(storageRef, file, metadata);\n\n// Listen for state changes, errors, and completion of the upload.\nuploadTask.on('state_changed',\n  (snapshot) => {\n    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    console.log('Upload is ' + progress + '% done');\n    switch (snapshot.state) {\n      case 'paused':\n        console.log('Upload is paused');\n        break;\n      case 'running':\n        console.log('Upload is running');\n        break;\n    }\n  }, \n  (error) => {\n    // A full list of error codes is available at\n    // https://firebase.google.com/docs/storage/web/handle-errors\n    switch (error.code) {\n      case 'storage/unauthorized':\n        // User doesn't have permission to access the object\n        break;\n      case 'storage/canceled':\n        // User canceled the upload\n        break;\n\n      // ...\n\n      case 'storage/unknown':\n        // Unknown error occurred, inspect error.serverResponse\n        break;\n    }\n  }, \n  () => {\n    // Upload completed successfully, now we can get the download URL\n    getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n\n      setImg(downloadURL)\n\n      console.log('File available at', downloadURL);\n    });\n  }\n);\n    }\n    const formHandler=(e)=>{\n        e.preventDefault();\n\n\n   \n    axios.post(\"http://localhost:8080/electronics\",{\n        id:idRef.current.value,\n        name:descriptionRef.current.value,\n        brand:brandRef.current.value,\n        rating:ratingRef.current.value,\n        img:img\n   }\n  )\n    .then(\n       res=>{\n       console.log(res.data)\n       if(res.data==\"added\"){\n        navigate(\"/\")\n\n       }\n       }\n    ).then(err=>console.log(err))\n\n\n}\n\n  return (\n    <>\n        <Nav />\n\n\n    <div className='add-wrap'>\n\n                <form onSubmit={formHandler}>\n                    <input type=\"text\"   ref={idRef} placeholder=\"id\" />\n                    <input type=\"text\"  ref={descriptionRef}   placeholder=\"Type\" />\n                    <input type=\"text\"  ref={brandRef}   placeholder=\"brand\" />\n\n                    <input type=\"text\"    ref={ratingRef} placeholder=\"rating\" />\n                 \n                    <input type=\"file\" onChange={(e)=>setFile(e.target.files[0])} />\n\n                    <button onClick={btnHanlder}>Upload</button>\n\n                    <input type=\"submit\"></input>\n                </form>\n    </div>\n        \n      \n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}